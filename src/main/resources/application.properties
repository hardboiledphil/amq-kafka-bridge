quarkus.amqp.devservices.enabled=false
quarkus.kafka.devservices.enabled=false

amqp-host=${amqp.host}
amqp-port=${amqp.port}
amqp-username=${amqp.username}
amqp-password=${amqp.password}

kafka.bootstrap.servers=${kafka.bootstrap.servers}

# json message incoming (reading from AMQP -> writing to Kafka)
mp.messaging.incoming.amq-to-kafka-json-in.connector=smallrye-amqp
mp.messaging.incoming.amq-to-kafka-json-in.address=AMQ.TO.KAFKA.JSON.IN

mp.messaging.outgoing.amq-to-kafka-json-out.connector=smallrye-kafka
mp.messaging.outgoing.amq-to-kafka-json-out.group.id=amq-kafka-bridge-group
mp.messaging.outgoing.amq-to-kafka-json-out.key.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.amq-to-kafka-json-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.amq-to-kafka-json-out.auto.offset.reset=earliest
mp.messaging.outgoing.amq-to-kafka-json-out.failure-strategy=dead-letter-queue
mp.messaging.outgoing.amq-to-kafka-json-out.topic=amq-to-kafka-json-out

# json message outgoing (reading from Kafka writing to AMQP)
mp.messaging.incoming.kafka-to-amq-json-in.connector=smallrye-kafka
mp.messaging.incoming.kafka-to-amq-json-in.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.kafka-to-amq-json-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.kafka-to-amq-json-in.auto.offset.reset=earliest
mp.messaging.incoming.kafka-to-amq-json-in.failure-strategy=dead-letter-queue
mp.messaging.incoming.kafka-to-amq-json-in.topic=kafka-to-amq-json-in
mp.messaging.incoming.kafka-to-amq-json-in.size=1
mp.messaging.incoming.kafka-to-amq-json-in.health-enabled=true
mp.messaging.incoming.kafka-to-amq-json-in.health-topic-verification-enabled=true
mp.messaging.incoming.kafka-to-amq-json-in.commit-strategy=throttled

mp.messaging.outgoing.kafka-to-amq-json-out.connector=smallrye-amqp
mp.messaging.outgoing.kafka-to-amq-json-out.address=KAFKA.TO.AMQ.JSON.OUT

# byte[] message incoming (reading from AMQP -> writing to Kafka)
mp.messaging.incoming.amq-to-kafka-bytes-in.connector=smallrye-amqp
mp.messaging.incoming.amq-to-kafka-bytes-in.address=AMQ.TO.KAFKA.BYTES.IN

mp.messaging.outgoing.amq-to-kafka-bytes-out.connector=smallrye-kafka
mp.messaging.outgoing.amq-to-kafka-bytes-out.group.id=amq-kafka-bridge-group
mp.messaging.outgoing.amq-to-kafka-bytes-out.key.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.amq-to-kafka-bytes-out.value.serializer=org.apache.kafka.common.serialization.ByteArraySerializer
mp.messaging.outgoing.amq-to-kafka-bytes-out.auto.offset.reset=earliest
mp.messaging.outgoing.amq-to-kafka-bytes-out.failure-strategy=ignore
mp.messaging.outgoing.amq-to-kafka-bytes-out.topic=amq-to-kafka-bytes-out

# byte[] message outgoing (reading from Kafka writing to AMQP)
mp.messaging.incoming.kafka-to-amq-bytes-in.connector=smallrye-kafka
mp.messaging.incoming.kafka-to-amq-bytes-in.group.id=amq-kafka-bridge-group
mp.messaging.incoming.kafka-to-amq-bytes-in.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.kafka-to-amq-bytes-in.value.deserializer=org.apache.kafka.common.serialization.ByteArrayDeserializer
mp.messaging.incoming.kafka-to-amq-bytes-in.auto.offset.reset=earliest
mp.messaging.incoming.kafka-to-amq-bytes-in.failure-strategy=dead-letter-queue
mp.messaging.incoming.kafka-to-amq-bytes-in.topic=kafka-to-amq-bytes-out
mp.messaging.incoming.kafka-to-amq-bytes-in.commit-strategy=throttled

mp.messaging.outgoing.kafka-to-amq-bytes-out.connector=smallrye-amqp
mp.messaging.outgoing.kafka-to-amq-bytes-out.address=KAFKA.TO.AMQ.BYTES.IN

mp.messaging.incoming.dead-letter-topic-kafka-to-amq-json-in.connector=smallrye-kafka
mp.messaging.incoming.dead-letter-topic-kafka-to-amq-json-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.dead-letter-topic-kafka-to-amq-json-in.auto.offset.reset=earliest

quarkus.log.level=INFO
quarkus.log.category."com.hardboiled.phil.amqkafkabridge".level=DEBUG
